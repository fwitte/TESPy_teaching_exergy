Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from tespy.connections import Ref
from tespy.components import Merge, Splitter

# Network
refrigerant = 'Ammonia'
nw = Network(
    fluids=[refrigerant, 'water'],
    T_unit='C', p_unit='bar', h_unit='kJ / kg', m_unit='kg / s'
)

# Components
cycle_closer = CycleCloser('Refrigerant Cycle Closer')

heatsource_ff = Source('Heat Source Feed Flow')
evaporator = HeatExchanger('Evaporator')
heatsource_pump = Pump('Heat Source Recirculation Pump')
heatsource_bf = Sink('Heat Source Back Flow')

lp_compressor = Compressor('Low Pressure Compressor')
merge = Merge('Injection')
hp_compressor = Compressor('High Pressure Compressor')

cons_cc = CycleCloser('Consumer Cycle Closer')
cons_pump = Pump('Heat Sink Recirculation Pump')
condenser = Condenser('Condenser')
cons_heatsink = HeatExchangerSimple('Heat Consumer')

split = Splitter('Condensate Splitter')
intermediate_valve = Valve('Intermediate Valve')
economizer = HeatExchanger('Economizer')

valve = Valve('Main Valve')

# Connections
cc2evap = Connection(cycle_closer, 'out1', evaporator, 'in2', label='00')
hs_ff2evap = Connection(heatsource_ff, 'out1', evaporator, 'in1', label='10')
evap2hs_pump = Connection(evaporator, 'out1', heatsource_pump, 'in1', label='11')
hs_pump2hs_bf = Connection(heatsource_pump, 'out1', heatsource_bf, 'in1', label='12')

nw.add_conns(cc2evap, hs_ff2evap, evap2hs_pump, hs_pump2hs_bf)

evap2lp_comp = Connection(evaporator, 'out2', lp_compressor, 'in1', label='01')
lp_comp2merge = Connection(lp_compressor, 'out1', merge, 'in1', label='02')
merge2hp_comp = Connection(merge, 'out1', hp_compressor, 'in1', label='03')
hp_comp2cond = Connection(hp_compressor, 'out1', condenser, 'in1', label='04')

nw.add_conns(evap2lp_comp, lp_comp2merge, merge2hp_comp, hp_comp2cond)

cons_cc2cons_pump = Connection(cons_cc, 'out1', cons_pump, 'in1', label='20')
cons_pump2cond = Connection(cons_pump, 'out1', condenser, 'in2', label='21')
cond2cons_hs = Connection(condenser, 'out2', cons_heatsink, 'in1', label='22')
cons_hs2cons_cc = Connection(cons_heatsink, 'out1', cons_cc, 'in1', label='23')

nw.add_conns(cons_cc2cons_pump, cons_pump2cond, cond2cons_hs, cons_hs2cons_cc)

cond2split = Connection(condenser, 'out1', split, 'in1', label='05')
split2econ = Connection(split, 'out1', economizer, 'in1', label='06')
econ2main_valve = Connection(economizer, 'out1', valve, 'in1', label='07')
split2inter_valve = Connection(split, 'out2', intermediate_valve, 'in1', label='30')
inter_valve2econ = Connection(intermediate_valve, 'out1', economizer, 'in2', label='31')
econ2merge = Connection(economizer, 'out2', merge, 'in2', label='32')
main_valve2cc = Connection(valve, 'out1', cycle_closer, 'in1', label='08')

nw.add_conns(
    cond2split, split2econ, econ2main_valve, split2inter_valve,
    inter_valve2econ, econ2merge, main_valve2cc
    )

# Component parameters
lp_compressor.set_attr(eta_s=0.75)
hp_compressor.set_attr(eta_s=0.75)
cons_pump.set_attr(eta_s=0.8)
heatsource_pump.set_attr(eta_s=0.8)

evaporator.set_attr(pr1=0.98, pr2=0.98)
condenser.set_attr(pr1=0.98, pr2=0.98)
economizer.set_attr(pr1=0.98, pr2=0.98)
cons_heatsink.set_attr(pr=0.98, Q=-500e3, dissipative=False)

# Connection parameters
cond2cons_hs.set_attr(T=70, p=10, fluid={refrigerant: 0, 'water': 1})
cons_hs2cons_cc.set_attr(T=50)

hs_ff2evap.set_attr(T=10, p=1.013, fluid={refrigerant: 0, 'water': 1})
evap2hs_pump.set_attr(T=5)
hs_pump2hs_bf.set_attr(p=1.013)

evap2lp_comp.set_attr(x=1, fluid={refrigerant: 1, 'water': 0})

split2econ.set_attr(m=Ref(cond2split, 0.99, 0))

# Starting values
p_evap = PSI('P', 'Q', 1, 'T', 5 - 2 + 273.15, refrigerant)
evap2lp_comp.set_attr(p=p_evap*1e-5)
p_cond = PSI('P', 'Q', 0, 'T', 70 + 2 + 273.15, refrigerant)
cond2split.set_attr(p=p_cond*1e-5)
p_mid = np.sqrt(p_evap * p_cond)
econ2merge.set_attr(p=p_mid, x=1)

# Busses
heat_in = Bus('Heat Input')
heat_in.add_comps(
    {'comp': heatsource_ff, 'base': 'bus'},
    {'comp': heatsource_bf, 'base': 'component'}
    )

heat_out = Bus('Heat Output')
heat_out.add_comps(
    {'comp': cons_heatsink, 'base': 'component'})

power_in = Bus('Power Input')
power_in.add_comps(
    {'comp': lp_compressor, 'char': 0.96, 'base': 'bus'},
    {'comp': hp_compressor, 'char': 0.96, 'base': 'bus'},
    {'comp': heatsource_pump, 'char': 0.96, 'base': 'bus'},
    {'comp': cons_pump, 'char': 0.96, 'base': 'bus'}
    )

nw.add_busses(heat_in, heat_out, power_in)

# Initial solve with starting values
nw.set_attr(interinfo=True)
nw.solve('design')

evap2lp_comp.set_attr(p=None)
evaporator.set_attr(ttd_l=2)
cond2split.set_attr(p=None)
condenser.set_attr(ttd_u=2)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
File [0;32m/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/tespy/networks/network.py:2011[0m, in [0;36mNetwork.solve_check_props[0;34m(self, c)[0m
[1;32m   2010[0m [38;5;28;01mtry[39;00m:
[0;32m-> 2011[0m     hmin [38;5;241m=[39m [43mfp[49m[38;5;241;43m.[39;49m[43mh_pT[49m[43m([49m
[1;32m   2012[0m [43m        [49m[43mc[49m[38;5;241;43m.[39;49m[43mp[49m[38;5;241;43m.[39;49m[43mval_SI[49m[43m,[49m[43m [49m[43mfp[49m[38;5;241;43m.[39;49m[43mMemorise[49m[38;5;241;43m.[39;49m[43mvalue_range[49m[43m[[49m[43mfl[49m[43m][49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m[43m [49m[38;5;241;43m*[39;49m[43m [49m[38;5;241;43m1.001[39;49m[43m,[49m[43m [49m[43mfl[49m[43m)[49m
[1;32m   2013[0m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m:

File [0;32m/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/tespy/tools/fluid_properties.py:598[0m, in [0;36mh_pT[0;34m(p, T, fluid, force_gas)[0m
[1;32m    596[0m         [38;5;28;01mreturn[39;00m [38;5;28mmax[39m(h, h_sat)
[0;32m--> 598[0m [43mMemorise[49m[38;5;241;43m.[39;49m[43mstate[49m[43m[[49m[43mfluid[49m[43m][49m[38;5;241;43m.[39;49m[43mupdate[49m[43m([49m[43mCP[49m[38;5;241;43m.[39;49m[43mPT_INPUTS[49m[43m,[49m[43m [49m[43mp[49m[43m,[49m[43m [49m[43mT[49m[43m)[49m
[1;32m    599[0m [38;5;28;01mreturn[39;00m Memorise[38;5;241m.[39mstate[fluid][38;5;241m.[39mhmass()

File [0;32mCoolProp/AbstractState.pyx:102[0m, in [0;36mCoolProp.CoolProp.AbstractState.update[0;34m()[0m

File [0;32mCoolProp/AbstractState.pyx:104[0m, in [0;36mCoolProp.CoolProp.AbstractState.update[0;34m()[0m

[0;31mValueError[0m: Inputs in Brent [42645.642063,54784.000000] do not bracket the root.  Function values are [-1.000153,-0.990727]

During handling of the above exception, another exception occurred:

[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[7], line 123[0m
[1;32m    121[0m [38;5;66;03m# Initial solve with starting values[39;00m
[1;32m    122[0m nw[38;5;241m.[39mset_attr(interinfo[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[0;32m--> 123[0m [43mnw[49m[38;5;241;43m.[39;49m[43msolve[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mdesign[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m    125[0m evap2lp_comp[38;5;241m.[39mset_attr(p[38;5;241m=[39m[38;5;28;01mNone[39;00m)
[1;32m    126[0m evaporator[38;5;241m.[39mset_attr(ttd_l[38;5;241m=[39m[38;5;241m2[39m)

File [0;32m/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/tespy/networks/network.py:1662[0m, in [0;36mNetwork.solve[0;34m(self, mode, init_path, design_path, max_iter, min_iter, init_only, init_previous, use_cuda, always_all_equations)[0m
[1;32m   1659[0m logging[38;5;241m.[39minfo(msg)
[1;32m   1661[0m [38;5;28mself[39m[38;5;241m.[39msolve_determination()
[0;32m-> 1662[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msolve_loop[49m[43m([49m[43m)[49m
[1;32m   1664[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mlin_dep:
[1;32m   1665[0m     msg [38;5;241m=[39m (
[1;32m   1666[0m         [38;5;124m'[39m[38;5;124mSingularity in jacobian matrix, calculation aborted! Make [39m[38;5;124m'[39m
[1;32m   1667[0m         [38;5;124m'[39m[38;5;124msure your network does not have any linear dependencies in [39m[38;5;124m'[39m
[0;32m   (...)[0m
[1;32m   1674[0m         [38;5;124m'[39m[38;5;124mof combustion chamber, provide small (near to zero, but not [39m[38;5;124m'[39m
[1;32m   1675[0m         [38;5;124m'[39m[38;5;124mzero) starting value.[39m[38;5;124m'[39m)

File [0;32m/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/tespy/networks/network.py:1712[0m, in [0;36mNetwork.solve_loop[0;34m(self)[0m
[1;32m   1709[0m [38;5;28;01mfor[39;00m [38;5;28mself[39m[38;5;241m.[39miter [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;28mself[39m[38;5;241m.[39mmax_iter):
[1;32m   1711[0m     [38;5;28mself[39m[38;5;241m.[39mincrement_filter [38;5;241m=[39m np[38;5;241m.[39mabsolute([38;5;28mself[39m[38;5;241m.[39mincrement) [38;5;241m<[39m err [38;5;241m*[39m[38;5;241m*[39m [38;5;241m2[39m
[0;32m-> 1712[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msolve_control[49m[43m([49m[43m)[49m
[1;32m   1713[0m     [38;5;28mself[39m[38;5;241m.[39mres [38;5;241m=[39m np[38;5;241m.[39mappend([38;5;28mself[39m[38;5;241m.[39mres, norm([38;5;28mself[39m[38;5;241m.[39mresidual))
[1;32m   1715[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39miterinfo:

File [0;32m/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/tespy/networks/network.py:1934[0m, in [0;36mNetwork.solve_control[0;34m(self)[0m
[1;32m   1931[0m             j [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m
[1;32m   1933[0m     [38;5;66;03m# check the fluid properties for physical ranges[39;00m
[0;32m-> 1934[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msolve_check_props[49m[43m([49m[43mc[49m[43m)[49m
[1;32m   1935[0m     i [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m
[1;32m   1937[0m [38;5;66;03m# increment for the custom variables[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/tespy/networks/network.py:2015[0m, in [0;36mNetwork.solve_check_props[0;34m(self, c)[0m
[1;32m   2013[0m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m:
[1;32m   2014[0m     f [38;5;241m=[39m [38;5;241m1.05[39m
[0;32m-> 2015[0m     hmin [38;5;241m=[39m [43mfp[49m[38;5;241;43m.[39;49m[43mh_pT[49m[43m([49m
[1;32m   2016[0m [43m        [49m[43mc[49m[38;5;241;43m.[39;49m[43mp[49m[38;5;241;43m.[39;49m[43mval_SI[49m[43m,[49m[43m [49m[43mfp[49m[38;5;241;43m.[39;49m[43mMemorise[49m[38;5;241;43m.[39;49m[43mvalue_range[49m[43m[[49m[43mfl[49m[43m][49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m[43m [49m[38;5;241;43m*[39;49m[43m [49m[43mf[49m[43m,[49m[43m [49m[43mfl[49m[43m)[49m
[1;32m   2018[0m T [38;5;241m=[39m fp[38;5;241m.[39mMemorise[38;5;241m.[39mvalue_range[fl][[38;5;241m3[39m]
[1;32m   2019[0m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:

File [0;32m/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/tespy/tools/fluid_properties.py:598[0m, in [0;36mh_pT[0;34m(p, T, fluid, force_gas)[0m
[1;32m    595[0m         h_sat [38;5;241m=[39m Memorise[38;5;241m.[39mstate[fluid][38;5;241m.[39mhmass()
[1;32m    596[0m         [38;5;28;01mreturn[39;00m [38;5;28mmax[39m(h, h_sat)
[0;32m--> 598[0m [43mMemorise[49m[38;5;241;43m.[39;49m[43mstate[49m[43m[[49m[43mfluid[49m[43m][49m[38;5;241;43m.[39;49m[43mupdate[49m[43m([49m[43mCP[49m[38;5;241;43m.[39;49m[43mPT_INPUTS[49m[43m,[49m[43m [49m[43mp[49m[43m,[49m[43m [49m[43mT[49m[43m)[49m
[1;32m    599[0m [38;5;28;01mreturn[39;00m Memorise[38;5;241m.[39mstate[fluid][38;5;241m.[39mhmass()

File [0;32mCoolProp/AbstractState.pyx:102[0m, in [0;36mCoolProp.CoolProp.AbstractState.update[0;34m()[0m

File [0;32mCoolProp/AbstractState.pyx:104[0m, in [0;36mCoolProp.CoolProp.AbstractState.update[0;34m()[0m

[0;31mValueError[0m: Inputs in Brent [42002.910167,54784.000000] do not bracket the root.  Function values are [-1.000141,-0.990219]
ValueError: Inputs in Brent [42002.910167,54784.000000] do not bracket the root.  Function values are [-1.000141,-0.990219]

